@{
    Layout = "~/Views/Shared/_LayoutExternal.cshtml";
    Html.RenderPartial("ExtPageHeader");
}
<link rel="stylesheet" type="text/css" href="~/css/StripesElement.css" data-rel-css="" />


<div class="col-md-6 col-md-offset-1" style="margin-top:90px">
    <div class="cell example example5">
        <form action="~/Ext/Charge" method="post" id="payment-form">
            <div id="example5-paymentRequest">
                <!--Stripe paymentRequestButton Element inserted here-->
            </div>
            <fieldset>
                <legend class="card-only" data-tid="elements_examples.form.pay_with_card">Pay with card</legend>
                <legend class="payment-request-available" data-tid="elements_examples.form.enter_card_manually">Or enter card details</legend>
                <div class="row">
                    <div class="field">
                        <label for="example5-name" data-tid="elements_examples.form.name_label">Name</label>
                        <input id="example5-name" data-tid="elements_examples.form.name_placeholder" class="input" type="text" placeholder="Jane Doe" required="">
                    </div>
                </div>
                <div class="row">
                    <div class="field">
                        <label for="example5-email" data-tid="elements_examples.form.email_label">Email</label>
                        <input id="example5-email" name="stripeEmail" data-tid="elements_examples.form.email_placeholder" class="input" type="text" placeholder="janedoe@gmail.com" required="">
                    </div>
                    <div class="field">
                        <label for="example5-phone" data-tid="elements_examples.form.phone_label">Phone</label>
                        <input id="example5-phone" data-tid="elements_examples.form.phone_placeholder" class="input" type="text" placeholder="(941) 555-0123" required="">
                    </div>
                </div>
                <div class="row">
                    <div class="field">
                        <label for="example5-address" data-tid="elements_examples.form.address_label">Address</label>
                        <input id="example5-address" data-tid="elements_examples.form.address_placeholder" class="input" type="text" placeholder="185 Berry St" required="">
                    </div>
                </div>
                <div class="row">
                    <div class="field">
                        <label for="example5-city" data-tid="elements_examples.form.city_label">City</label>
                        <input id="example5-city" data-tid="elements_examples.form.city_placeholder" class="input" type="text" placeholder="San Francisco" required="">
                    </div>
                    <div class="field">
                        <label for="example5-country" data-tid="elements_examples.form.country_label">Country</label>
                        <select id="example5-country" data-tid="elements_examples.form.country_placeholder" class="input">
                            <option selected="selected" value="US">United States</option>
                        </select>
                    </div>
                </div>
                <div class="row">
                    <div class="field">
                        <label for="example5-card" data-tid="elements_examples.form.card_label">Card</label>
                        <div id="example5-card" class="input"></div>
                    </div>
                </div>
                <button type="submit" data-tid="elements_examples.form.pay_button">Pay $25</button>
            </fieldset>
           
        </form>        
    </div>
</div>

<script src="https://js.stripe.com/v3/"></script>
@*<script src="~/js/StripesElement.js"></script>*@
<script>
    var stripe = Stripe('pk_test_s1b6p5MmoOrYVcev3IPk3UMd');
    var elements = stripe.elements();
    var card = elements.create("card", {
        iconStyle: "solid",
        style: {
            base: {
                iconColor: "#fff",
                color: "#fff",
                fontWeight: 400,
                fontFamily: "Helvetica Neue, Helvetica, Arial, sans-serif",
                fontSize: "15px",
                fontSmoothing: "antialiased",

                "::placeholder": {
                    color: "#BFAEF6"
                },
                ":-webkit-autofill": {
                    color: "#fce883"
                }
            },
            invalid: {
                iconColor: "#FFC7EE",
                color: "#FFC7EE"
            }
        }
    });
    card.mount("#example5-card");

    function stripeTokenHandler(token) {
        // Insert the token ID into the form so it gets submitted to the server
        var form = document.getElementById('payment-form');
        var hiddenInput = document.createElement('input');
        hiddenInput.setAttribute('type', 'hidden');
        hiddenInput.setAttribute('name', 'stripeToken');
        hiddenInput.setAttribute('value', token.id);
        form.appendChild(hiddenInput);

        // Submit the form
        form.submit();
    }

    function createToken() {
        stripe.createToken(card).then(function (result) {
            if (result.error) {
                // Inform the user if there was an error
                var errorElement = document.getElementById('card-errors');
                errorElement.textContent = result.error.message;
            } else {
                // Send the token to your server
                stripeTokenHandler(result.token);
            }
        });
    };

    // Create a token when the form is submitted.
    var form = document.getElementById('payment-form');
    form.addEventListener('submit', function (e) {
        e.preventDefault();
        createToken();
    });

    ///**
    // * Payment Request Element
    // */
    //var paymentRequest = stripe.paymentRequest({
    //    country: "US",
    //    currency: "usd",
    //    total: {
    //        amount: 2500,
    //        label: "Total"
    //    },
    //    requestShipping: true,
    //    shippingOptions: [
    //        {
    //            id: "free-shipping",
    //            label: "Free shipping",
    //            detail: "Arrives in 5 to 7 days",
    //            amount: 0
    //        }
    //    ]
    //});
    //paymentRequest.on("token", function (result) {
    //    var example = document.querySelector(".example5");
    //    example.querySelector(".token").innerText = result.token.id;
    //    example.classList.add("submitted");
    //    result.complete("success");
    //});

    //var paymentRequestElement = elements.create("paymentRequestButton", {
    //    paymentRequest: paymentRequest,
    //    style: {
    //        paymentRequestButton: {
    //            theme: "light"
    //        }
    //    }
    //});

    //paymentRequest.canMakePayment().then(function (result) {
    //    if (result) {
    //        document.querySelector(".example5 .card-only").style.display = "none";
    //        document.querySelector(
    //            ".example5 .payment-request-available"
    //        ).style.display =
    //            "block";
    //        paymentRequestElement.mount("#example5-paymentRequest");
    //    }
    //});

    ////registerElements([card], "example5");

</script>