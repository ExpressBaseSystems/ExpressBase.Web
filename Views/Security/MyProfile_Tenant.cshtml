@{
    var bApnd = true;
    if (ViewBag.Env == "Development")
    {
        bApnd = false;
    }
    Layout = "~/Views/Shared/LayoutInner.cshtml";
}

@section StyleSheet{
    <link rel="stylesheet" type="text/css" href="~/css/jquery.datetimepicker.css" asp-append-version=@bApnd />
    <style>
        .profpic-out {
            width: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 25px 25px 0px 25px;
        }

        .profpic-in {
            border-radius: 50%;
        }

        .myLabel {
            font-weight: 500;
            margin: 0px;
        }

        .myTextField {
            height: 45px;
        }

        ::-webkit-input-placeholder { /* Chrome/Opera/Safari */
            color: #ccc !important;
            font-weight: 400;
        }

        .sub-head {
            font-size: 22px;
        }

        .linkDiv {
            color: #339bb3;
            cursor: pointer;
            display: inline-block;
        }

            .linkDiv:hover, .linkDiv:focus {
                color: #2a6496;
                text-decoration: underline;
            }

        .pwdLabel {
            font-weight: 500;
            width: 38%;
        }

        .pwdField {
            width: 60%;
            display: inline-block;
            height: 45px;
        }
    </style>
}
@section JavaScript{
    <script type="text/javascript" src="~/js/jquery.datetimepicker.min.js" asp-append-version=@bApnd></script>
}
<div class="row s-dash-container h-100">
    @*<div class="pd-0 tdasboard-sidebar tenant_sidebar">
        <div class="t-container">
            <ul class="list-group eb-dashbord-sidebar">
                <li class="list-group-item outer_li text-center">
                    <a class="t_a" href="/MySolutions">
                        <span class="material-icons t__sidebar_icon">highlight</span>
                        <span class="t__sidebar_text">My Solutions</span>
                    </a>
                </li>
                <li class="list-group-item outer_li text-center">
                    <a class="t_a">
                        <span class="material-icons t__sidebar_icon">attach_money</span>
                        <span class="t__sidebar_text">Billing</span>
                    </a>
                </li>
                <li class="list-group-item outer_li text-center">
                    <a class="t_a" href="/Store">
                        <span class="material-icons t__sidebar_icon">store</span>
                        <span class="t__sidebar_text">App Store</span>
                    </a>
                </li>
                <li class="list-group-item outer_li text-center">
                    <a class="t_a">
                        <span class="material-icons t__sidebar_icon">chrome_reader_mode</span>
                        <span class="t__sidebar_text">Wiki</span>
                    </a>
                </li>
                <li class="list-group-item outer_li text-center">
                    <a class="t_a">
                        <span class="material-icons t__sidebar_icon">contact_support</span>
                        <span class="t__sidebar_text">Support</span>
                    </a>
                </li>
            </ul>
        </div>
    </div>*@
    <div class="s-dash-workplace tenant_workpane">
        <div class="col-md-12 col-lg-12 col-sm-12 s-dash-solution-desc">
            <div class="col-md-7 pd-0">
                <h4 class="mr-t-0 mr-b-0">Account Settings<span class="apps_count"></span></h4>
            </div>
            <div class="col-md-5 pd-0" style="display: flex;flex-flow: row-reverse nowrap;">
            </div>
        </div>
        <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12 pd-0 s-dash-workplace-tabs">
            <div class="tdash-box-body">
                <div class="col-md-3">
                    <div class="profpic-out">
                        <div class="profpic-in">
                            <img id="imgprofimage" src="~/images/dp/@ViewBag.UId .jpg" style="border-radius: 50%;height: 130px; max-width: 130px;" data-id="0" onerror="this.src = '/images/imagenotfound.svg';" />
                        </div>
                    </div>
                    <div style="margin-bottom: 25px; text-align: right;">
                        <div class="linkDiv" id="btnChngDp"><i class="fa fa-pencil" aria-hidden="true"></i> Edit</div>
                    </div>
                    <div class="form-group">
                        <label class="myLabel">Full Name</label>
                        <input id="txtFullName" type="text" class="form-control myTextField" title="Full Name" autocomplete="off" onchange="this.title = 'Full Name : ' + this.value ;">
                    </div>
                    @*<div class="form-group">
            <label class="myLabel">Nick Name</label>
            <input id="txtNickName" type="text" class="form-control myTextField" title="Nick Name" autocomplete="off" onchange="this.title = 'Nick Name : ' + this.value ;">
        </div>*@
                    <div class="form-group">
                        <label class="myLabel">Email ID</label>
                        <input id="txtEmailPri" type="text" class="form-control myTextField" style="background: transparent;" title="Email ID" autocomplete="off" onchange="this.title = 'Email ID : ' + this.value ;" disabled="disabled">
                    </div>
                    <div style="margin-top: 25px;">
                        <div class="linkDiv" onclick="$('#MU_ChangePwdModal').modal('show');"><i class="fa fa-key" aria-hidden="true"></i> Change Password</div>
                    </div>

                </div>
                <div class="col-md-9" style="padding-left: 50px;">
                    <div class="sub-head" style="padding: 0 0px 20px 0px;">Basic Details</div>

                    <div class="row">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="myLabel">Date of Birth</label>
                                <input id="txtDob" type="text" class="form-control myTextField" title="Date of Birth" autocomplete="off" onchange="this.title = 'Date of Birth : ' + this.value ;">
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="myLabel">Gender</label>
                                <select id="selGender" class="form-control myTextField" title="Gender" onchange="this.title = 'Gender : ' + this.value ;">
                                    <option>Male</option>
                                    <option>Female</option>
                                    <option>Other</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-1"></div>
                        <div class="col-md-5">
                            <div class="form-group">
                                <label class="myLabel">Alternate Email ID</label>
                                <input id="txtEmailSec" type="text" class="form-control myTextField" title="Alternate Email ID" autocomplete="off" onchange="this.title = 'Alternate Email ID : ' + this.value ;">
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="myLabel">Primary Phone Number</label>
                                <input id="txtPhPri" type="text" class="form-control myTextField" title="Primary Phone Number" autocomplete="off" onchange="this.title = 'Primary Phone Number : ' + this.value ;">
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="myLabel">Secondary Phone Number</label>
                                <input id="txtPhSec" type="text" class="form-control myTextField" title="Secondary Phone Number" autocomplete="off" onchange="this.title = 'Secondary Phone Number : ' + this.value ;">
                            </div>
                        </div>
                        <div class="col-md-1"></div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="myLabel">Land Phone Number</label>
                                <input id="txtPhLand" type="text" class="form-control myTextField" title="Land Phone Number" autocomplete="off" onchange="this.title = 'Land Phone Number : ' + this.value ;">
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label class="myLabel">Extension</label>
                                <input id="txtPhExt" type="text" class="form-control myTextField" title="Extension" autocomplete="off" onchange="this.title = 'Extension : ' + this.value ;">
                            </div>
                            <div class="form-group" style="margin: 0">
                                <input id="email" type="email" class="form-control" style="padding: 0; width: 0; border: none; height: 0;">
                            </div>
                        </div>
                    </div>
                    <div class="sub-head" style="padding: 20px 0px 20px 0px;">Preferences</div>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="myLabel">Default Location</label>
                                <select id="selDefaultLoc" class="form-control myTextField" title="Default Location"></select>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label class="myLabel">Locale</label>
                                <select id="selLocale" class="form-control myTextField" title="Locale">
                                    @foreach (ExpressBase.Common.Singletons.Culture cult in ViewBag.Cultures)
                                    {
                                        <option>@cult.Name</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="myLabel">Time Zone</label>
                                <select id="selTimezone" class="form-control myTextField" title="Time Zone">
                                    @foreach (ExpressBase.Common.Singletons.TimeZone tz in ViewBag.TimeZones)
                                    {
                                        <option>@tz.Name</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12 col-sm-12 col-lg-12 pd-l-0" style="padding-top:20px;">
                        <button class="btn eb_btnblue eb_btn_md" id="btnSaveMyProf"><i class="fa fa-floppy-o"></i> Save Changes</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="MU_ChangePwdModal" class="modal fade" role="dialog">
    <div class="modal-dialog" style="height:100%; display:flex; align-items:center; margin-top: 0px; margin-bottom: 0px;">
        <div class="modal-content" style="width:100%;">
            <div class="modal-header" style="border-style:none;">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <div>
                    <h4 class="modal-title">Change Password</h4>
                </div>
            </div>
            <div class="modal-body">
                <input type="hidden" id="itemid" />
                <div id="modalBodyDiv">
                    <div class="form-group">
                        <label class="pwdLabel">Old Password :</label>
                        <input id="pwdOld" class="form-control pwdField" type="password" title="Enter Old Password">
                    </div>
                    <div class="form-group">
                        <label class="pwdLabel">New Password :</label>
                        <input id="pwdNew" class="form-control pwdField" type="password" title="Enter New Password">
                    </div>
                    <div class="form-group">
                        <label class="pwdLabel">Confirm New Password :</label>
                        <input id="pwdNewConfirm" class="form-control pwdField" type="password" title="ReEnter New Password">
                    </div>
                    <label id="lblPwdChngMsg" style="float: right; padding-right: 5%; color: rgb(204, 0, 0);"></label>
                </div>
            </div>
            <div class="modal-footer" style="border-style:none;">
                <div style="display:flex;justify-content:space-between">
                    <button id="btnUpdatePwd" type="button" class="ebbtn eb_btn-sm eb_btnblue">
                        <i class="fa fa-spinner fa-pulse" style=" display:none;"></i> Update
                    </button>
                    <button type="button" class="ebbtn eb_btn-sm eb_btnplain" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>
</div>

@{
    @using Newtonsoft.Json;
    var UserData = Html.Raw(JsonConvert.SerializeObject(ViewBag.UserData));

}

<script>
    var myProfileJs = function (UserData) {

        this.UserData = UserData;
        this.OutDataList = [];
        this.menuBarObj =  new EbHeader();
        //DOM ELEMENTS
        this.$FullName = $("#txtFullName");
        //this.$NickName = $("#txtNickName");
        this.$EmailPri = $("#txtEmailPri");
        this.$Dob = $("#txtDob");
        this.$Gender = $("#selGender");
        this.$EmailSec = $("#txtEmailSec");
        this.$PhPri = $("#txtPhPri");
        this.$PhSec = $("#txtPhSec");
        this.$PhLand = $("#txtPhLand");
        this.$PhExt = $("#txtPhExt");
        this.$DefaultLoc = $("#selDefaultLoc");
        this.$Locale = $("#selLocale");
        this.$Timezone = $("#selTimezone");
        //CHANGE PWD MODAL ELEMENTS
        this.$ChangePwdModal = $("#MU_ChangePwdModal");
        this.$pwdOld = $("#pwdOld");
        this.$pwdNew = $("#pwdNew");
        this.$pwdNewConfirm = $("#pwdNewConfirm");
        this.$lblPwdChngMsg = $("#lblPwdChngMsg");
        this.$btnUpdatePwd = $("#btnUpdatePwd");

        this.init = function () {
            this.$Dob.datetimepicker({ timepicker: false, format: "d-m-Y" });

            this.menuBarObj.setName("Account Settings");
            //this.menuBarObj.insertButton(`<button id="btnSaveMyProf" class='btn' title='Save'><i class="fa fa-floppy-o" aria-hidden="true"></i></button>`);

            $("#btnSaveMyProf").on('click', this.clickbtnSaveMyProf.bind(this));
            this.$btnUpdatePwd.on('click', this.clickbtnUpdatePwd.bind(this))

            this.$ChangePwdModal.on('shown.bs.modal', function (e) {
                this.$pwdOld.val("");
                this.$pwdNew.val("");
                this.$pwdNewConfirm.val("");
                this.$btnUpdatePwd.prop("disabled", false);
                $(this.$btnUpdatePwd.children()[0]).hide();
            }.bind(this));

            this.initFormData();
        }
        this.initFormData = function () {
            this.$FullName.val(this.UserData["fullname"]);
            //this.$NickName.val(this.UserData["nickname"]);
            this.$EmailPri.val(this.UserData["email"]);
            this.$Dob.val(this.UserData["dob"]);
            this.$Gender.val(this.UserData["sex"]);
            this.$EmailSec.val(this.UserData["alternate_email"]);
            this.$PhPri.val(this.UserData["ph_primary"]);
            this.$PhSec.val(this.UserData["ph_secondary"]);
            this.$PhLand.val(this.UserData["ph_landline"]);
            this.$PhExt.val(this.UserData["ph_land_extensn"]);
            //this.DefaultLoc.val(this.UserData[""]);
            if (this.UserData["preferences_json"]) {
                let pobj = JSON.parse(this.UserData["preferences_json"]);
                this.$Locale.val(pobj.Locale);
                this.$Timezone.val(pobj.TimeZone);
            }
        }

        this.prepareOutData = function () {
            this.OutDataList = [];
            this.pushToOutData("fullname", this.$FullName.val());
            //this.pushToOutData("nickname", this.$NickName.val());
            this.pushToOutData("email", this.$EmailPri.val());
            this.pushToOutData("dob", this.$Dob.val());
            this.pushToOutData("sex", this.$Gender.val());
            this.pushToOutData("alternate_email", this.$EmailSec.val());
            this.pushToOutData("ph_primary", this.$PhPri.val());
            this.pushToOutData("ph_secondary", this.$PhSec.val());
            this.pushToOutData("ph_landline", this.$PhLand.val());
            this.pushToOutData("ph_land_extensn", this.$PhExt.val());

            let tempobj = { Locale: this.$Locale.val(), TimeZone: this.$Timezone.val(), DefaultLocation: 0 };
            let tempjson = JSON.stringify(tempobj);
            if (this.UserData["preferences_json"] !== tempjson )
                this.OutDataList.push({ Key: "preferences_json", Value: tempjson });
            if (this.OutDataList.length > 0)
                return true;
            EbMessage("show", { Message: 'No Changes to Save', AutoHide: true, Background: '#0000aa' });
            return false;
        }

        this.pushToOutData = function (_key, _val) {
            if (_val === null || _val === undefined)
                return;
            if (typeof (_val) === "string")
                _val = _val.trim();
            if (this.UserData[_key] !== _val)
                this.OutDataList.push({ Key: _key, Value: _val });
        }

        this.clickbtnSaveMyProf = function () {
            if (this.prepareOutData()) {
                $("#btnSaveMyProf").prop("disabled", true);
                $("#eb_common_loader").EbLoader("show");

                $.ajax({
                    type: "POST",
                    url: "../Security/SaveMyProfile",
                    data: { UserData: JSON.stringify(this.OutDataList)},
                    error: function (xhr, ajaxOptions, thrownError) {
                        EbMessage("show", { Message: 'Something Unexpected Occurred', AutoHide: true, Background: '#aa0000' });
                        $("#btnSaveMyProf").prop("disabled", false);
                        $("#eb_common_loader").EbLoader("hide");
                    },
                    success: function (result) {
                        if (result) {
                            EbMessage("show", { Message: 'Saved Successfully', AutoHide: true, Background: '#00aa00' });
                        }
                        else {
                            EbMessage("show", { Message: 'Something went wrong', AutoHide: true, Background: '#aa0000' });
                        }
                        $("#btnSaveMyProf").prop("disabled", false);
                        $("#eb_common_loader").EbLoader("hide");
                    }.bind(this)
                });

            }

        }

        this.clickbtnUpdatePwd = function (evt) {
            if (this.$pwdOld.val().length < 8 || this.$pwdNew.val().length < 8 || this.$pwdNewConfirm.val().length < 8) {
                this.$lblPwdChngMsg.text("Password too short - minimum length is 8");
                setTimeout(function () { this.$lblPwdChngMsg.text(""); }.bind(this), 4000);
                return;
            }
            if (this.$pwdNew.val() !== this.$pwdNewConfirm.val()) {
                this.$lblPwdChngMsg.text("Password does not match the confirm password");
                setTimeout(function () { this.$lblPwdChngMsg.text(""); }.bind(this), 4000);
                return;
            }
            if (this.$pwdOld.val() === this.$pwdNew.val()) {
                this.$lblPwdChngMsg.text("New Password should not be same as old ");
                setTimeout(function () { this.$lblPwdChngMsg.text(""); }.bind(this), 4000);
                return;
            }
            this.$btnUpdatePwd.prop("disabled", true);
            $(this.$btnUpdatePwd.children()[0]).show();

            $.ajax({
                type: "POST",
                url: "../Security/ChangeUserPassword",
                data: { OldPwd: this.$pwdOld.val(), NewPwd: this.$pwdNew.val() },
                error: function (xhr, ajaxOptions, thrownError) {
                    EbMessage("show", { Message: 'Something Unexpected Occurred', AutoHide: true, Background: '#aa0000' });
                    this.$btnUpdatePwd.prop("disabled", false);
                    $(this.$btnUpdatePwd.children()[0]).hide();
                },
                success: function (status) {
                    if (status) {
                        EbMessage("show", { Message: 'Password Changed Successfully', AutoHide: true, Background: '#00aa00' });
                        this.$ChangePwdModal.modal('hide');
                    }
                    else {
                        EbMessage("show", { Message: 'Something Went Wrong', AutoHide: true, Background: '#aa0000' });
                    }
                    this.$btnUpdatePwd.prop("disabled", false);
                    $(this.$btnUpdatePwd.children()[0]).hide();
                }.bind(this)
            });

        }

        this.init();
    }

    new myProfileJs(@UserData);

     var d = new EbFileUpload({
        Type:"image",
        Toggle: "#btnChngDp",
        TenantId:"@ViewBag.cid",
        SolutionId: "@ViewBag.SolnId",
        Container: "DisplayPicture",
        Multiple: false,
        ServerEventUrl: 'https://se.eb-test.xyz',
        EnableTag: false,
        EnableCrop: true,
        Context: "dp",//if single and crop
        UserId: @ViewBag.UId,
        ResizeViewPort: false //if single and crop
    });

    d.uploadSuccess = function(fileid){
        EbMessage("show", { Message: fileid});
    }
    d.windowClose = function () {
        EbMessage("show", { Message: "window closed",Background: "red" });
    }

</script>