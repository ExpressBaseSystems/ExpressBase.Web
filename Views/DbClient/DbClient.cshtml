@{
    Layout = "~/Views/Shared/LayoutBuilders.cshtml";
}
@using ExpressBase.Objects.ServiceStack_Artifacts;
@using Newtonsoft.Json;


<link rel="stylesheet" type="text/css" href="~/css/DBExplorerStyles.css">
<link rel="stylesheet" type="text/css" href="~/css/Eb.css">
<link rel="stylesheet" type="text/css" href="~/css/Eb_datatable.css">

<script src="~/js/DBExplorer.js" type="text/javascript"></script>
<script src="~/js/Eb_CommonHeader.js" type="text/javascript"></script>

@await Component.InvokeAsync("PageHeaderCommon")
<div class="cont">
    <div style="width:25%;">
        <div style="margin-top:50px;background-color :white; border:2px solid #ccc;"><h4 style="text-align:center">Table Explorer</h4></div>
        <div class="mytree" style="padding:12px;background-color :white; border:2px solid #ccc; margin-top:10px; position: relative; height: 600px; overflow: auto ;">
            @{
                foreach (KeyValuePair<string, EbDbExplorerTable> Table_kvp in ViewBag.Tables.TableCollection)
                {
                    <div table-name="@Table_kvp.Key" id="@Table_kvp.Key">


                        <span class="table-name">@Table_kvp.Key</span>
                        @{
                            EbDbExplorerTable table = Table_kvp.Value;
                            string schema = table.Schema;
                            List<string> Indexes = table.Index;
                            List<EbDbExplorerColumn> Columns = table.Columns;
                            <div>
                                <span>Schema</span>
                                <div>@schema</div>
                            </div>
                            <div>
                                <span>Index</span>
                                @foreach (string Index in Indexes)
                                {
                                    <div>@Index</div>
                                }
                            </div>
                            <div>
                                <span>Column</span>
                                @foreach (EbDbExplorerColumn Column in Columns)
                                {
                                    <div>@Column.ColumnName :: @Column.ColumnType :: @Column.ColumnKey :: @Column.ColumnTable</div>
                                }
                            </div>
                        }
                    </div>
                }
            }
        </div>
    </div>

</div>

<div id="pannel">
    <div class="draggeer">
        <button type="button" class="btn btn-primary" id="EXPLAIN" data-toggle="button" aria-pressed="false" autocomplete="off" style="margin: 0px 5px 0px 5px; float: right;">
            EXPLAIN
        </button>
        <button type="button" class="btn btn-primary" id="sqlquery" data-toggle="button" aria-pressed="false" autocomplete="off" style="margin: 0px 5px 0px 5px; float: right;">
            EXECUTE
        </button>
        <i id="TabAdder" class="fa fa-plus-circle fa-2x" aria-hidden="true" style="color: #3232b3b3;  margin-right: 20px; margin-top: 3px;"></i>
        <ul id="TabAdderMain" class="nav nav-tabs"></ul>
    </div>

    <div id="droppable" class="drop-box" style="display:none"></div>


    
    <div class="tab-content draggeer" id="maintab">
        @*<div id="result_set">
            <div id="code1" class="tab-pane fade"><textarea id="coder1" name="coder1" style="visibility:hidden"></textarea></div>

            <ul class="nav nav-tabs" id="Result_Tab"></ul>
            <div class="tab-content resulttab" id="resulttab">

            </div>
        </div>*@
    </div>
</div>


<script>
    let tableCollection = @Html.Raw(JsonConvert.SerializeObject(ViewBag.Tables));
        $(document).ready(function () {
            var menuBarObj = $("#layout_div").data("EbHeader");
            menuBarObj.insertButton(`<button type="button" class="btn btn-primary" id="QUERY" data-toggle="button" aria-pressed="false" autocomplete="off">DRAG</button>`);
            menuBarObj.setName("QUERY");

        let DBExplorer = new Eb_DBExplorer({
            TCobj: tableCollection
        });

    });
</script>



