@using ServiceStack;
@using ExpressBase.Objects;
@using ExpressBase.Common;
@using Newtonsoft.Json;
@using ExpressBase.Objects.ServiceStack_Artifacts;
@using ExpressBase.Common.Objects;
@{
    Layout = "~/Views/Shared/_Layout1.cshtml";
}
<link rel="stylesheet" type="text/css" href="~/css/splitWindow.css">
<script src="~/js/splitWindow.js" type="text/javascript"></script>
<style>
    .scrollable-menu {
        height: auto;
        max-height: 200px;
        overflow-x: visible;
        overflow-y: scroll;
    }

    .loadingdiv {
        vertical-align: middle;
        margin: 5% 50%;
        z-index: 1;
        display: none;
    }
</style>
@{
    string head = string.Empty;
    string html = string.Empty;

    var dvRefId = ViewBag.dvRefId;
    var dvname = (ViewBag.dvObject != null) ? ViewBag.dvObject.Name : "* Untitled *";
}
<div class="row" style="margin-top: 52px;">
    <div class="toolbar-com" id='Toolbar'>
    </div>
</div>

<div class='tablecontainer' style='background-color:rgb(260,260,260);'>
    <ul class='nav nav-tabs' id='table_tabs'>
        <li class='nav-item active'>
            <a class='nav-link' href='#tab_1")' data-toggle='tab' style="padding: 6px 4px !important;"><i class='fa fa-home' aria-hidden='true'></i>&nbsp; Home</a>
        </li>
    </ul>
    <div class='tab-content' id='table_tabcontent'>
        <div id='tab_1")' class='tab-pane active'>

            <div class="container-fluid my-container">
                @*<div class="row">
                    <div class="toolbar-com" id='Toolbar'>
                        <button class="btn" id="new"><i class="fa fa-plus" aria-hidden="true"></i></button>
                        @if (ViewBag.data.EbDataSource.FilterDialog == null)
                        {
                            <button id='btnGo' class='btn btn-primary'>Run</button>
                        }
                    </div>
                </div>*@
                <div class="row" id="parent-div">
                    <div class="col-md-2 no-padd fd" id="sidediv" style="display:block">
                        <div class="min-btn">
                            <button class="btn-tb-com pull-right" onclick="fdBoxMin();" id='fd-min-btn'><i class="fa fa-caret-left fa-lg" aria-hidden="true"></i></button>
                        </div>
                        @*@{
                            if (ViewBag.data.EbDataSource.FilterDialog != null)
                            {
                                @await Component.InvokeAsync("ParameterDiv", new { paramDiv = ViewBag.data.EbDataSource.FilterDialog });
                                <button id='btnGo' class='btn btn-primary' style='float: right;margin-top: 4px;'>Run</button>
                            }
                        }*@
                    </div>
                    <div class="col-md-8 no-padd cont-wnd" id="contBox">
                        <div class="sub-w" id="sub-w">
                            @*<div class='sub-windows' id='sub0'>
                                <div class='sub-windows-head' id="indi-toolbar">
                                    <div class='pull-right' style='margin-top: 3px;'>
                                        <button class='head-btn'><i class='fa fa-minus' aria-hidden='true'></i></button>
                                        <button class='head-btn'><i class='fa fa-thumb-tack' aria-hidden='true'></i></button>
                                        <button class='head-btn'><i class='fa fa-times' aria-hidden='true'></i></button>
                                    </div>
                                </div>
                                @*<div id='TableControls_@(tableId + "_1")' class='well well-sm' style='margin-bottom:5px!important;'>
                                        <label class="dvname">@ViewBag.data.Name</label>
                                        <button id='btnGo' class='btn btn-primary' style='float: right;'>Run</button>
                                    </div>*@
                                @*<div id='(tableId+"_1container")'>
                                    <div id='(tableId+"_1TableColumns4Drag")' style='border:1px solid;display:none;height:100%;min-height: 400px;overflow-y: auto;'>
                                    </div>
                                    <div style='width:auto;' id='(tableId+"_1divcont")'>
                                        <div id='(tableId+"_1ColumnsDispaly")' style='display:none;' class='colCont'></div>
                                        <div id='(tableId+"_1ColumnsGrouping")' style='display:none;margin-top: 1px;' class='colCont'></div>
                                        <table id='(tableId+"_1")' class='table table-striped table-bordered'></table>
                                    </div>
                                </div>*@
                            @*</div>*@

                        </div>
                    </div>
                    <div class="col-md-2 pg no-padd pull-right" id="ppgrid">
                        <div class="min-btn">
                            <button class="btn-tb-com" onclick="pgBoxMin();" id='pg-min'><i class="fa fa-caret-right fa-lg" aria-hidden="true"></i></button>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>


<div id="Outer">
    @if (ViewBag.dvObject != null)
            {
        @await Component.InvokeAsync("DataVisualization", new { dsRefid = ViewBag.dvObject.DataSourceRefId, Meta = ViewBag.Meta.Substring(11, (ViewBag.Meta.Length - 11)), dvRefId = ViewBag.dvRefId });
            }
</div>

@section EbHead {
    <script>

        @Html.Raw(ViewBag.Meta)
        @Html.Raw(ViewBag.JsObjects);

        var split = new splitWindow("parent-div", "sidediv", "contBox");
        var dvsetObj = new EbObjects["EbDataVisualizationSet"]("set1");
        var pg = new Eb_PropertyGrid("ppgrid");
        pg.setObject(dvsetObj, AllMetas["EbDataVisualizationSet"]);
        pg.PropertyChanged = function (obj, Pname) {
            console.log(obj);
                if (obj[Pname] !== null) {
                    $.each(obj[Pname], function (i, dv) {
                        split.createContentWindow();
                    });
                    @*$.LoadingOverlay("show");
                    $("#Outer").load("../DV/dvCommon", { dvset: obj[Pname], Meta: JSON.stringify( @Html.Raw(ViewBag.Meta.Substring(11, (ViewBag.Meta.Length-11))) ), dvRefId: null }, function () {
                    $.LoadingOverlay("hide");*@
                }

        }
        $("#datatSourceDropdown select").on("changed.bs.select", function (e, clickedIndex, newValue, oldValue) {
            var dsRefid = $(this).find('option').eq(clickedIndex).attr("data-dsid");
            $.LoadingOverlay("show");
            $("#Outer").load("../DV/dvCommon", { dsRefid: dsRefid, Meta: JSON.stringify( @Html.Raw(ViewBag.Meta.Substring(11, (ViewBag.Meta.Length-11))) ), dvRefId: null }, function () {
                $.LoadingOverlay("hide");
                });
        });
        $('#datatSourceDropdown select').off("loaded.bs.select").on("loaded.bs.select", function () {
              $('.selectpicker').selectpicker({
                style: 'btn-info',
                size: 4
            });
            $('#datatSourceDropdown').selectpicker('refresh');

         });
        $(document).ready(function () {
            @Html.Raw(head)
            $('[data-toggle="tooltip"]').tooltip();
        });
    </script>
}
