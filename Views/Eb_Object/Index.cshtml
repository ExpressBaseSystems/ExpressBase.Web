
@{
    Layout = "~/Views/Shared/_Layout1.cshtml";
    @using ExpressBase.Common;
    @using ExpressBase.Common.Objects;
    @using ExpressBase.Common.Structures;
    var versionObj = EbSerializers.Json_Serialize(ViewBag.dsObj);
}
<style>
    /*.codedit .tab-section-common {
        position: fixed;
        width: 100%;
        z-index: 3;
        padding-top: 10px;
        background: white;
        border-bottom: 13px solid #f2f2f2;
    }

        .codedit .tab-section-common .nav > li > a {
            background: white;
            width: 150px;
            padding: 2px 15px;
            text-align: center;
            border: 1px solid #ccc;
            border-bottom: none;
        }

        .codedit .tab-section-common .nav > .active a {
            background: #f2f2f2;
        }

    .codedit .tab-cont-common {
        margin-top: 48px;
    }*/

    .tab-section-common .nav-tabs {
        border-bottom: 2px solid #DDD;
    }

        .tab-section-common .nav-tabs > li.active > a, .nav-tabs > li.active > a:focus, .nav-tabs > li.active > a:hover {
            border-width: 0;
        }

    .tab-section-common .nav-tabs > li > a {
        border: none;
        color: #666;
    }

            .tab-section-common .nav-tabs > li.active > a, .nav-tabs > li > a:hover {
                border: none;
                color: #4285F4 !important;
                background: transparent;
            }

    .tab-section-common .nav-tabs > li > a::after {
        content: "";
        background: #4285F4;
        height: 4px;
        position: absolute;
        width: 100%;
        left: 0px;
        bottom: -1px;
        transition: all 250ms ease 0s;
        transform: scale(0);
    }

        .tab-section-common .nav-tabs > li.active > a::after, .nav-tabs > li:hover > a::after {
            transform: scale(1);
        }

    .tab-section-common .tab-nav > li > a::after {
        background: #21527d none repeat scroll 0% 0%;
        color: #fff;
    }
    .tab-section-common {
        background: white;
        margin-bottom: 5px;
    }
</style>
<script>
@Html.Raw(ViewBag.Meta);
@Html.Raw(ViewBag.JsObjects);
@Html.Raw(ViewBag.EbObjectTypes);

    $(document).ready(function () {
        commonObj.init();
    });

    var commonObj = new Eb_ObjectCommon('@ViewBag.Refid', @Html.Raw(versionObj), '@ViewBag.Status', '@ViewBag.VersionNumber', tabnum = 0, type = @ViewBag.ObjType, major = @ViewBag.Majorv, ssurl = '@ViewBag.ServiceUrl');
    $("#layout_div").data("commonObj", commonObj);
    console.log("Index   " + $("#layout_div").data("commonObj"));

</script>
<div id="object_Dashboard_main">
    @await Component.InvokeAsync("ObjectDashboard", new { refid = ViewBag.Refid, objname = ViewBag.ObjectName, status = ViewBag.Status, vernum = ViewBag.VersionNumber, workcopies = ViewBag.Workingcopy, _tags = ViewBag.Tags, _apps = ViewBag.AppId, _dashbord_tiles = ViewBag.DashboardTiles })
</div>

<div class="row codedit" id="codedit" style="margin-top:38px;">
    <div class="tab-section-common" id="tab-section-common">
        <ul class="nav nav-tabs" id="versionNav">
            @{
                var icon = "";
                if (ViewBag.VersionNumber.Substring(ViewBag.VersionNumber.Length - 1) == "w")
                {
                    icon = "fa-pencil";
                }
                else
                {
                    icon = "fa-lock";
                }
            }
            <li class="active"><a data-toggle="tab" class="cetab" href="#vernav0" data-verNum="@ViewBag.VersionNumber"><i class='fa @(icon)' aria-hidden='true'></i> v @ViewBag.VersionNumber</a></li>
        </ul>
    </div>
    <div class="tab-content tab-cont-common" id="versionTab">
        <div id="vernav0" class="tab-pane fade in active code_edit" data-id="new">
            @{
                if (ViewBag.ObjType == (int)EbObjectTypes.DataSource)
                {
                    @await Component.InvokeAsync("CodeEditor", new { dsobj = versionObj, tabnum = 0, type = ViewBag.ObjType, refid = ViewBag.Refid, ssurl = ViewBag.ServiceUrl })


                }
                else if (ViewBag.ObjType == (int)EbObjectTypes.TableVisualization)
                {
                    object o = null;
                    @await Component.InvokeAsync("DVTable", new { dsobj = versionObj, tabnum = 0, type = ViewBag.ObjType, refid = ViewBag.Refid, ssurl = ViewBag.ServiceUrl, counter = 0, url = ViewBag.BrowserURLContext })

                }
                else if (ViewBag.ObjType == (int)EbObjectTypes.ChartVisualization)
                {
                    object o = null;
                    @await Component.InvokeAsync("DVChart", new { dsobj = versionObj, tabnum = 0, type = ViewBag.ObjType, refid = ViewBag.Refid, ssurl = ViewBag.ServiceUrl, counter = 0, data = o })

                }
                else if (ViewBag.ObjType == (int)EbObjectTypes.Report)
                {
                    @await Component.InvokeAsync("ReportBuilder", new { dsobj = versionObj, tabnum = 0, type = ViewBag.ObjType, refid = ViewBag.Refid, ssurl = ViewBag.ServiceUrl })

                }
                else if (ViewBag.ObjType == (int)EbObjectTypes.WebForm)
                {
                    @await Component.InvokeAsync("FormBuilder", new { dsobj = versionObj, tabnum = 0, type = ViewBag.ObjType, refid = ViewBag.Refid, ssurl = ViewBag.ServiceUrl })

                }
                else if (ViewBag.ObjType == (int)EbObjectTypes.EmailBuilder)
                {
                    @await Component.InvokeAsync("Emailbuilder", new { dsobj = versionObj, tabnum = 0, type = ViewBag.ObjType, refid = ViewBag.Refid, ssurl = ViewBag.ServiceUrl })

                }

                else if (ViewBag.ObjType == (int)EbObjectTypes.BotForm)
                {
                    @await Component.InvokeAsync("BotFormBuilder", new { dsobj = versionObj, tabnum = 0, type = ViewBag.ObjType, refid = ViewBag.Refid, ssurl = ViewBag.ServiceUrl })

                }
                else if (ViewBag.ObjType == (int)EbObjectTypes.FilterDialog)
                {
                    @await Component.InvokeAsync("FilterDialogBuilder", new { dsobj = versionObj, tabnum = 0, type = ViewBag.ObjType, refid = ViewBag.Refid, ssurl = ViewBag.ServiceUrl })

                }
            }
        </div>
    </div>
</div>
