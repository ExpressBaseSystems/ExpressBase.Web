@using ExpressBase.Common.Objects;
@using ExpressBase.Objects;
@using ExpressBase.Common.Structures;
@using ExpressBase.Common.Objects.Attributes;

<link rel="stylesheet" href="/css/FormBuilder/contextMenu.css">
<link rel="stylesheet" href="~/lib/codemirror/lib/codemirror.css">
<link rel="stylesheet" href="~/lib/codemirror/addon/hint/show-hint.css">
<link rel="stylesheet" href="~/lib/codemirror/addon/fold/foldgutter.css" />

<script src="~/lib/codemirror/lib/codemirror.js"></script>
<script src="~/js/FormBuilder/contextMenu.min.js"></script>
<script src="~/js/Eb_FontEditor.js"></script>
<script src="~/lib/codemirror/addon/hint/show-hint.js"></script>
<script src="~/lib/codemirror/addon/hint/javascript-hint.js"></script>
<script src="~/lib/codemirror/mode/javascript/javascript.js"></script>
<script src="~/lib/codemirror/addon/fold/foldcode.js"></script>
<script src="~/lib/codemirror/addon/fold/foldgutter.js"></script>
<script src="~/lib/codemirror/addon/fold/brace-fold.js"></script>
<script src="~/lib/codemirror/addon/fold/xml-fold.js"></script>
<script src="~/lib/codemirror/addon/fold/comment-fold.js"></script>
<script src="~/lib/codemirror/mode/xml/xml.js"></script>
<script type="text/javascript" src="~/js/FilterDialogBuilder/Eb_FilterFormBuilder.js"></script>

@{
    //int typeInt = 0//(string.IsNullOrEmpty(ViewBag.Objtype)) ? Convert.ToInt32(Context.Request.Query["objtype"]) : Convert.ToInt32(ViewBag.Objtype);
    EbObjectType type = (EbObjectType)Convert.ToInt32(ViewBag.ObjType);
    int typeInt = Convert.ToInt32(ViewBag.ObjType);

    string builderType_S = type.ToString();
    var _builderType = (BuilderType)Enum.Parse(typeof(BuilderType), builderType_S, true);
    var _toolBox = new EbToolbox(_builderType);
}

<div id="con" class="filter-form-buider-cont">
    <div id="toolbox_cont" class='formB-box toolbox-cont'>
        <div class="pgHead">Toolbox  <i class="fa fa-wrench" aria-hidden="true"></i> <i class="fa fa-times pin" aria-hidden="true"></i></div>
        <div id="form-buider-toolBox" class="form-buider-toolBox">

            <ul class="nav nav-tabs">
                <li class="active"><a data-toggle="tab" href="#div-primitive-tools" style="padding: 2px 15px; font-weight: 600;">Basic</a></li>
                <li><a data-toggle="tab" href="#div-custom-tools" style="padding: 2px 15px; font-weight: 600;">User Controls</a></li>
            </ul>
            <div class="tab-content">
                <div id="div-primitive-tools" class="tab-pane fade in active div-primitive-tools">
                    @Html.Raw(_toolBox.ToolsHtml)
                </div>
                <div id="div-custom-tools" class="tab-pane fade div-custom-tools">
                    @Html.Raw(ViewBag.UserControlHtml)
                </div>
            </div>

        </div>
    </div>
    <div class="form-save-wraper">
        @{
            if (ViewBag.Html != null)
            {
                @Html.Raw(ViewBag.Html)
            }
            else
            {
                <div id="placeholder" ebsid="placeholder" IsRenderMode='false' eb-form="true" ui-inp eb-type="@_builderType" tabindex="1" class="formB-box form-buider-form ebcont-ctrl"></div>
            }

        }

        @*<div class="dev-chat-cont">
            <div class="eb-chat-head"><span>Filter Dialog <i class="fa fa-comment pull-right" aria-hidden="true"></i></span></div>
                <div id="FilterForm1" ebsid="FilterForm1" IsRenderMode='false' eb-form="true"  ui-inp eb-type="@_builderType" tabindex="1" class="eb-chatBox-dev ebcont-ctrl">
                @Html.Raw(@ViewBag.html)
            </div>
        </div>*@

    </div>
    <input type="hidden" id="objtype" value="@type" />
    <input type="hidden" id="objid" value="@ViewBag.Refid" />
    <div id='form-buider-propGrid' class='formB-box property-grid-cont'>
        <div id='pgWraper'></div>
    </div>
</div>

<script>
    @Html.Raw(_toolBox.EbObjectTypes);
    @Html.Raw(_toolBox.AllControlls);
    @Html.Raw(_toolBox.AllMetas);
    @Html.Raw(_toolBox.JsonToJsObjectFuncs);
    @Html.Raw(_toolBox.TypeRegister);
    @Html.Raw(_toolBox.EbOnChangeUIfns);

    let BuilderType = '@builderType_S';
    let formBuilderObj = null;
    let objid = $("#objid").val();
    let editModeFormObj =  @Html.Raw(ViewBag.dsObj) || null;
    let FBid = editModeFormObj ? editModeFormObj.EbSid : "FilterForm_" + Date.now().toString(36);
    let ToolBoxId = "form-buider-toolBox";
    const PrimitiveToolsId = "div-primitive-tools";
    const CustomToolsId = "div-custom-tools";
    let PGid = "form-buider-propGrid";
    //commonO.ObjCollection["#vernav@(ViewBag.tabnum)"] = new FilterformBuilder(ToolBoxId, FBid, PGid, @((int)_builderType), @typeInt,  "@ViewBag.wc",  "@ViewBag.cid", @Html.Raw(ViewBag.dsObj));
    commonO.ObjCollection["#vernav@(ViewBag.tabnum)"] = new formBuilder({
        toolBoxId: ToolBoxId,
        primitiveToolsId: PrimitiveToolsId,
        customToolsId: CustomToolsId,
        formId: FBid,
        PGId: PGid,
        builderType: BuilderType,
        Eb_objType: @typeInt,
        wc: "@ViewBag.wc",
        cid: "@ViewBag.cid",
        objInEditMode : editModeFormObj});
</script>