@using ServiceStack;
@using ExpressBase.Objects;
@using ExpressBase.Common;
@using Newtonsoft.Json;
@using ExpressBase.Objects.ServiceStack_Artifacts;
@using ExpressBase.Common.Objects;
@{
    Layout = "~/Views/Shared/_Layout1.cshtml";
}
<style>
    .scrollable-menu {
        height: auto;
        max-height: 200px;
        overflow-x: visible;
        overflow-y: scroll;
    }

    .loadingdiv {
        vertical-align: middle;
        margin: 5% 50%;
        z-index: 1;
        display: none;
    }
</style>
@{
    string head = string.Empty;
    string html = string.Empty;

    var dvRefId = ViewBag.dvRefId;
    var dvname = (ViewBag.dvObject != null) ? ViewBag.dvObject.Name : "* Untitled *";
}
<div class="well well-sm" id="devpanel" style="margin-top: 53px;">
    <div class='dropdown' id='datatSourceDropdown' style="display:inline-block">
        <select class="selectpicker" data-live-search="true">
            @{
                if (ViewBag.dvObject == null)
                {
                    <option data-tokens="Select Datasource" data-dsid="Select Datasource" selected>Select Datasource</option>
                }
                foreach (var element in ViewBag.DSListAll)
                {
                    if (ViewBag.dvObject != null && element.Key == ViewBag.dvObject.DataSourceRefId)
                    {
                        <option data-tokens="@element.Key" data-dsid="@element.Key" selected>@element.Value.Name</option>
                    }
                    else
                    {
                        <option data-tokens="@element.Key" data-dsid="@element.Key">@element.Value.Name</option>
                    }
                }
            }
        </select>
    </div>

        <input id='dvnametxt' type='text' class='form-control' placeholder='dvname' style="width: auto;display: inline-block;" />
        <input id='TableHeighttxt' type='number' class='form-control' placeholder='table height' style="width: auto;display: inline-block;" />
        @*<div style="display: none;" id="renderOption">
                <input type="radio" name="renderAs" value="table" checked> Table<br>
                <input type="radio" name="renderAs" value="graph"> Graph<br>
                <input type="radio" name="renderAs" value="both"> Both
            </div>*@

        <button id='Save_btn' class='btn btn-primary' style="float: right;display:inline-block"> Save </button>
        
    </div>

<div id="filterDia">
    @if (ViewBag.dvObject != null)
    {
        @await Component.InvokeAsync("DataVisualization", new { dsRefid = ViewBag.dvObject.DataSourceRefId, Meta = ViewBag.Meta.Substring(11, (ViewBag.Meta.Length - 11)), dvRefId = ViewBag.dvRefId });
    }
</div>

@section EbHead {
    <script>
        if ("@ViewBag.wc" == "uc") {
            $("#datatSourceDropdown").css("display", "none");
            $("#dvnametxt").css("display", "none");
            $("#TableHeighttxt").css("display", "none");
            $("#devpanel").css("height", "50px");
        }
        $("#datatSourceDropdown select").on("changed.bs.select", function (e, clickedIndex, newValue, oldValue) {
            var dsRefid = $(this).find('option').eq(clickedIndex).attr("data-dsid");
            $.LoadingOverlay("show");
            $("#filterDia").load("../DV/dvCommon", { dsRefid: dsRefid, Meta: JSON.stringify( @Html.Raw(ViewBag.Meta.Substring(11, (ViewBag.Meta.Length-11))) ), dvRefId: null }, function () {
                $.LoadingOverlay("hide");
                });
        });
        $('#datatSourceDropdown select').off("loaded.bs.select").on("loaded.bs.select", function () {
              $('.selectpicker').selectpicker({
                style: 'btn-info',
                size: 4
            });
            $('#datatSourceDropdown').selectpicker('refresh');

         });
        $(document).ready(function () {
            @Html.Raw(head)
            $('[data-toggle="tooltip"]').tooltip();
        });
        @Html.Raw(ViewBag.Meta)
    </script>
}
