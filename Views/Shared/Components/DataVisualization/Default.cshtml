@{
    @using Newtonsoft.Json;
    @using ExpressBase.Common;
    @using ExpressBase.Objects;
    @using ExpressBase.Common.Objects;
    @using ServiceStack;
    @using System.Runtime.Serialization;
    var dvobj = EbSerializers.Json_Serialize(ViewBag.data);
    //var dvobj = JsonConvert.SerializeObject(ViewBag.data);
    var filterDialogObj = ViewBag.data.EbDataSource.FilterDialog;
}

@{
    if (ViewBag.data.EbDataSource.FilterDialogRefId != null && ViewBag.data.EbDataSource.FilterDialogRefId != "" && ViewBag.forWrap != "wrap")
    {
        //foreach (EbControl control in ViewBag.data.EbDataSource.FilterDialog.Controls)
        //{
        //    if (control is EbSimpleSelect)
        //    {
        //        (control as EbSimpleSelect).InitFromDataBase(ViewBag.serviceclient as JsonServiceClient);
        //    }
        //}
        //@filterDialogObj.EbSid_CtxId = ViewBag.ContextId;
        @await Component.InvokeAsync("ParameterDiv", new { FilterDialogObj = filterDialogObj, _user = ViewBag.currentUser, _sol = ViewBag.solution });

    }
}

@*@section EbHead {
        <script>
            @Html.Raw(ViewBag.HtmlHead);
        </script>
    }*@
<script>
    var dvGlobal = new Object();
    @Html.Raw(ViewBag.HtmlHead);
    if ('@ViewBag.wc' === 'uc' || typeof prevfocusedId !== 'undefined' ) {
        dvcontainerObj.currentObj =  @Html.Raw(dvobj);
    }
    else if ('@ViewBag.wc' === 'dc') {
        commonO = $("#layout_div").data("commonObj");
        console.log(commonO);

        commonO.Current_obj =  @Html.Raw(dvobj);
    }
    else {
        dvGlobal.Current_obj =  @Html.Raw(dvobj);
    }

</script>

